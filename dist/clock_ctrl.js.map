{"version":3,"sources":["../src/clock_ctrl.js"],"names":["hex","c","s","i","parseInt","isNaN","Math","round","min","max","charAt","convertToHex","rgb","trim","substring","convertToRGB","color","generateColor","colorStart","colorEnd","colorCount","start","end","len","alpha","ret","push","MetricsPanelCtrl","appEvents","coords","highlightedMarker","ClockCtrl","$scope","$injector","timeSrv","get","panel","maxDataPoints","dashboard","on","length","timestamp","event","pos","x","circle","setStyle","fillColor","events","onInitEditMode","bind","onPanelTeardown","render","data","minLat","maxLat","minLon","maxLon","polylines","polyline","lastLineHasData","datapoints","position","Geohash","decode","lat","lng","value","hash","myMap","remove","center","find","point","L","map","fix","fitBounds","tiles","tileLayer","attribution","addTo","scale","opts","istart","domain","istop","ostart","range","ostop","nscale","mscale","mgradient","inc","mcolors","String","p","heat","heatLayer","radius","minOpacity","maxZoom","blur","gradient","e","coordsInBox","filter","coord","boxZoomBounds","contains","latLng","minTime","apply","maxTime","console","log","Date","isFinite","setTime","from","moment","utc","to","addEditorTab","$timeout","cancel","nextTickPromise","scope","elem","$panelContainer","bgColor","css","templateUrl","base32","geohash","bounds","latMin","sw","lonMin","latMax","ne","lonMax","lon","toFixed","floor","LN10","Number","Error","toLowerCase","evenBit","chr","idx","indexOf","n","bitN","lonMid","latMid"],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import './leaflet.js';\n//import _ from 'lodash';\n//import moment from 'moment';\nimport './css/clock-panel.css!';\nimport './leaflet.css!';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport appEvents from 'app/core/app_events';\n\nvar myMap;\nvar coords = [];\nvar highlightedMarker = null;\nvar timeSrv;\n\nimport './realworld-10000.js';\nimport './leaflet-heat.js';\n//import {h337} from './heatmap.js'\n//import {HeatmapOverlay} from './leaflet-heatmap.js';\n\nexport class ClockCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector) {\n\n        super($scope, $injector);\n        timeSrv = $injector.get('timeSrv');\n        this.panel.maxDataPoints = 500;\n        const dashboard = this.dashboard;\n        //\n        // don't forget to include leaflet-heatmap.js\n\n        appEvents.on('graph-hover', event => {\n            if (coords) {\n                for (var i = 0; i < coords.length; i++) {\n                    if (coords[i].timestamp >= event.pos.x) {\n                        if (coords[i].circle) {\n                            coords[i].circle.setStyle({\n                                fillColor: 'red',\n                                color: 'red'\n                            });\n                        }\n                        if (highlightedMarker) {\n                            highlightedMarker.setStyle({\n                                fillColor: 'none',\n                                color: 'none'\n                            });\n                        }\n                        highlightedMarker = coords[i].circle;\n                        break;\n                    }\n                }\n            }\n        });\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('panel-initialized', this.render.bind(this));\n        this.events.on('data-received', function (data) {\n            coords = [];\n            var minLat = 90;\n            var maxLat = -90;\n            var minLon = 180;\n            var maxLon = -180;\n            var polylines = [];\n            var polyline = [];\n            var lastLineHasData = false;\n            for (var i = 0; i < data[0].datapoints.length; i++) {\n                const position = data[1].datapoints[i][0] ?\n                    Geohash.decode(data[1].datapoints[i][0]) :\n                    null;\n                if (position) {\n                    minLat = Math.min(minLat, position.lat);\n                    minLon = Math.min(minLon, position.lng);\n                    maxLat = Math.max(maxLat, position.lat);\n                    maxLon = Math.max(maxLon, position.lng);\n                    polyline.push(position);\n                    lastLineHasData = true;\n                } else {\n                    if (lastLineHasData) {\n                        polylines.push(polyline);\n                        polyline = [];\n                        lastLineHasData = false;\n                    }\n                }\n                coords.push({\n                    value: data[0].datapoints[i][0],\n                    hash: data[1].datapoints[i][0],\n                    position: position,\n                    timestamp: data[0].datapoints[i][1]\n                });\n            }\n\n            if (lastLineHasData) {\n                polylines.push(polyline);\n            }\n\n            if (myMap) {\n                myMap.remove();\n            }\n\n            var center = coords.find(point => point.position);\n            center = center ? center.position : [0, 0];\n\n            myMap = L.map('themap');\n            var fix = 0.000000000001;\n            myMap.fitBounds([\n                [minLat + fix, minLon + fix],\n                [maxLat, maxLon]\n            ]);\n\n            var tiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n                attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n            }).addTo(myMap);\n\n            var scale = function(opts){\n                var istart = opts.domain[0],\n                    istop  = opts.domain[1],\n                    ostart = opts.range[0],\n                    ostop  = opts.range[1];\n                return function scale(value) {\n                    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n                }\n            };\n\n            var nscale=10;\n            var mscale = scale({domain:[0,nscale],range:[0,1]});\n            var mgradient = {};\n            var inc = 0;\n            var mcolors = generateColor('#111111','#6495ED',nscale);\n\n            mcolors.map(function (c) {\n                mgradient[mscale(inc)] = \"#\"+String(mcolors[inc]);\n                inc+=1;\n            })\n\n            //console.log(\"Gradient: \", mgradient);\n\n            data = coords.map(function (p) { return [p.position.lat, p.position.lng, p.value]; });\n            var heat = L.heatLayer(data, {\n                radius:30,\n                minOpacity: 0,\n                maxZoom: 18,\n                max: 1,\n                blur: 15,\n                gradient: {0.4: 'blue', 0.65: 'lime', 1: 'red'},\n            }).addTo(myMap);\n\n            myMap.on('boxzoomend', function (e) {\n                const coordsInBox = coords.filter(\n                    coord =>\n                    coord.position &&\n                    e.boxZoomBounds.contains(\n                        L.latLng(coord.position.lat, coord.position.lng)\n                    )\n                );\n                const minTime = Math.min.apply(\n                    Math,\n                    coordsInBox.map(coord => coord.timestamp)\n                );\n                const maxTime = Math.max.apply(\n                    Math,\n                    coordsInBox.map(coord => coord.timestamp)\n                );\n                console.log(new Date(minTime));\n                console.log(new Date(maxTime));\n                if (isFinite(minTime) && isFinite(maxTime)) {\n                    timeSrv.setTime({\n                        from: moment.utc(minTime),\n                        to: moment.utc(maxTime)\n                    });\n                }\n            });\n        });\n\n    }\n\n    onInitEditMode() {\n        this.addEditorTab(\n            'Options',\n            'public/plugins/grafana-clock-panel/editor.html',\n            2\n        );\n    }\n\n    onPanelTeardown() {\n        this.$timeout.cancel(this.nextTickPromise);\n    }\n\n    link(scope, elem) {\n        this.events.on('render', () => {\n            const $panelContainer = elem.find('.panel-container');\n\n            if (this.panel.bgColor) {\n                $panelContainer.css('background-color', this.panel.bgColor);\n            } else {\n                $panelContainer.css('background-color', '');\n            }\n        });\n    }\n}\n\nClockCtrl.templateUrl = 'module.html';\n\nvar Geohash = {};\n\n/* (Geohash-specific) Base32 map */\nGeohash.base32 = '0123456789bcdefghjkmnpqrstuvwxyz';\n\nGeohash.decode = function (geohash) {\n    var bounds = Geohash.bounds(geohash); // <-- the hard work\n    // now just determine the centre of the cell...\n\n    var latMin = bounds.sw.lat,\n        lonMin = bounds.sw.lng;\n    var latMax = bounds.ne.lat,\n        lonMax = bounds.ne.lng;\n\n    // cell centre\n    var lat = (latMin + latMax) / 2;\n    var lon = (lonMin + lonMax) / 2;\n\n    // round to close to centre without excessive precision: ⌊2-log10(Δ°)⌋ decimal places\n    lat = lat.toFixed(Math.floor(2 - Math.log(latMax - latMin) / Math.LN10));\n    lon = lon.toFixed(Math.floor(2 - Math.log(lonMax - lonMin) / Math.LN10));\n\n    return {\n        lat: Number(lat),\n        lng: Number(lon)\n    };\n};\n\nGeohash.bounds = function (geohash) {\n    if (geohash.length === 0) throw new Error('Invalid geohash');\n\n    geohash = geohash.toLowerCase();\n\n    var evenBit = true;\n    var latMin = -90,\n        latMax = 90;\n    var lonMin = -180,\n        lonMax = 180;\n\n    for (var i = 0; i < geohash.length; i++) {\n        var chr = geohash.charAt(i);\n        var idx = Geohash.base32.indexOf(chr);\n        if (idx == -1) throw new Error('Invalid geohash');\n\n        for (var n = 4; n >= 0; n--) {\n            var bitN = (idx >> n) & 1;\n            if (evenBit) {\n                // longitude\n                var lonMid = (lonMin + lonMax) / 2;\n                if (bitN == 1) {\n                    lonMin = lonMid;\n                } else {\n                    lonMax = lonMid;\n                }\n            } else {\n                // latitude\n                var latMid = (latMin + latMax) / 2;\n                if (bitN == 1) {\n                    latMin = latMid;\n                } else {\n                    latMax = latMid;\n                }\n            }\n            evenBit = !evenBit;\n        }\n    }\n\n    var bounds = {\n        sw: {\n            lat: latMin,\n            lng: lonMin\n        },\n        ne: {\n            lat: latMax,\n            lng: lonMax\n        }\n    };\n\n    return bounds;\n};\n\nfunction hex (c) {\n  var s = \"0123456789abcdef\";\n  var i = parseInt (c);\n  if (i == 0 || isNaN (c))\n    return \"00\";\n  i = Math.round (Math.min (Math.max (0, i), 255));\n  return s.charAt ((i - i % 16) / 16) + s.charAt (i % 16);\n}\n\n/* Convert an RGB triplet to a hex string */\nfunction convertToHex (rgb) {\n  return hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);\n}\n\n/* Remove '#' in color hex string */\nfunction trim (s) { return (s.charAt(0) == '#') ? s.substring(1, 7) : s }\n\n/* Convert a hex string to an RGB triplet */\nfunction convertToRGB (hex) {\n  var color = [];\n  color[0] = parseInt ((trim(hex)).substring (0, 2), 16);\n  color[1] = parseInt ((trim(hex)).substring (2, 4), 16);\n  color[2] = parseInt ((trim(hex)).substring (4, 6), 16);\n  return color;\n}\n\nfunction generateColor(colorStart,colorEnd,colorCount){\n    // The beginning of your gradient\n    var start = convertToRGB (colorStart);\n    // The end of your gradient\n    var end   = convertToRGB (colorEnd);\n    // The number of colors to compute\n    var len = colorCount;\n    //Alpha blending amount\n    var alpha = 0.0;\n    var ret = [];\n    for (var i = 0; i < len; i++) {\n        var c = [];\n        alpha += (1.0/len);\n        c[0] = start[0] * alpha + (1 - alpha) * end[0];\n        c[1] = start[1] * alpha + (1 - alpha) * end[1];\n        c[2] = start[2] * alpha + (1 - alpha) * end[2];\n        ret.push(convertToHex (c));\n    }\n    return ret;\n}\n\n\n\n\n\n"]}