{"version":3,"sources":["../src/clock_ctrl.js"],"names":["LL","_","moment","MetricsPanelCtrl","appEvents","coords","highlightedMarker","ClockCtrl","$scope","$injector","timeSrv","get","panel","maxDataPoints","dashboard","on","event","i","length","timestamp","pos","x","circle","setStyle","fillColor","color","events","onInitEditMode","bind","onPanelTeardown","render","data","minLat","maxLat","minLon","maxLon","polylines","polyline","lastLineHasData","datapoints","position","Geohash","decode","Math","min","lat","lng","max","push","value","hash","myMap","remove","center","find","point","L","map","fix","fitBounds","CartoDB_PositronNoLabels","tileLayer","attribution","subdomains","maxZoom","e","coordsInBox","filter","coord","boxZoomBounds","contains","latLng","minTime","apply","maxTime","console","log","Date","isFinite","setTime","from","utc","to","OpenTopoMap","addTo","OpenSeaMap","forEach","weight","opacity","circleMarker","stroke","fillOpacity","radius","addEditorTab","$timeout","cancel","nextTickPromise","scope","elem","$panelContainer","bgColor","css","templateUrl","base32","geohash","bounds","latMin","sw","lonMin","latMax","ne","lonMax","lon","toFixed","floor","LN10","Number","Error","toLowerCase","evenBit","chr","charAt","idx","indexOf","n","bitN","lonMid","latMid"],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import LL from './leaflet.js'\nimport _ from 'lodash';\nimport moment from 'moment';\nimport './css/clock-panel.css!';\nimport './leaflet.css!';\nimport {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport appEvents from 'app/core/app_events';\n\nvar myMap;\nvar coords = []\nvar highlightedMarker = null\nvar timeSrv\n\n\nexport class ClockCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    timeSrv = $injector.get('timeSrv')\n    this.panel.maxDataPoints = 500;\n    const dashboard = this.dashboard\n\n    appEvents.on('graph-hover', (event) => {\n      if(coords) {\n        for(var i = 0; i < coords.length; i++) {\n          if(coords[i].timestamp >= event.pos.x) {\n            if(coords[i].circle) {\n              coords[i].circle.setStyle({\n                fillColor: \"red\",\n                color: \"red\"\n              })\n            }\n            if(highlightedMarker) {\n              highlightedMarker.setStyle({\n                fillColor: \"none\",\n                color: \"none\"\n              })\n            }\n            highlightedMarker = coords[i].circle\n            break\n          }\n        }\n      }\n    });\n\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n    this.events.on('data-received', function(data) {\n      coords = []\n      var minLat = 90\n      var maxLat = -90\n      var minLon = 180\n      var maxLon = -180\n      var polylines = []\n      var polyline = []\n      var lastLineHasData = false\n      for(var i = 0; i < data[0].datapoints.length; i++) {\n        const position = data[1].datapoints[i][0] ? Geohash.decode(data[1].datapoints[i][0]) : null\n        if(position) {\n          minLat = Math.min(minLat, position.lat)\n          minLon = Math.min(minLon, position.lng)\n          maxLat = Math.max(maxLat, position.lat)\n          maxLon = Math.max(maxLon, position.lng)\n          polyline.push(position)\n          lastLineHasData = true\n        } else {\n          if(lastLineHasData) {\n            polylines.push(polyline)\n            polyline = []\n            lastLineHasData = false\n          }\n        }\n        coords.push({\n          value: data[0].datapoints[i][0],\n          hash: data[1].datapoints[i][0],\n          position: position,\n          timestamp: data[0].datapoints[i][1]\n        })\n      }\n      if(lastLineHasData) {\n        polylines.push(polyline)\n      }\n\n      if(myMap) {\n        myMap.remove()\n      }\n      var center = coords.find(point => point.position)\n      center = center ? center.position : [0, 0]\n      myMap = L.map('themap')\n      var fix = 0.000000000001;\n      myMap.fitBounds([[minLat+fix, minLon+fix],\n            [maxLat, maxLon]])\n      var CartoDB_PositronNoLabels = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n        subdomains: 'abcd',\n        maxZoom: 19\n      })\n\n      myMap.on(\"boxzoomend\", function(e) {\n        const coordsInBox = coords.filter(coord =>\n          coord.position && e.boxZoomBounds.contains(L.latLng(coord.position.lat, coord.position.lng)))\n        const minTime = Math.min.apply(Math, coordsInBox.map(coord => coord.timestamp))\n        const maxTime = Math.max.apply(Math, coordsInBox.map(coord => coord.timestamp))\n        console.log(new Date(minTime))\n        console.log(new Date(maxTime))\n        if (isFinite(minTime)  && isFinite(maxTime)) {\n          timeSrv.setTime({\n            from  : moment.utc(minTime),\n            to    : moment.utc(maxTime),\n          })\n        }\n      })\n\n      var OpenTopoMap = L.tileLayer('http://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\n        maxZoom: 17\n      });\n      OpenTopoMap.addTo(myMap)\n      var OpenSeaMap = L.tileLayer('http://tiles.openseamap.org/seamark/{z}/{x}/{y}.png', {});\n\n      OpenSeaMap.addTo(myMap)\n      polylines.forEach(polyline => {\n        L.polyline(polyline, {\n          color: 'blue',\n          weight: 6,\n          opacity: 0.9\n        }).addTo(myMap)\n      })\n      coords.forEach(point => {\n        if(point.position) {\n          point.circle = L.circleMarker(point.position, {\n            color: 'none',\n            stroke: 'false',\n            fillColor: 'none',\n            fillOpacity: 0.5,\n            radius: 10\n          })\n          point.circle.addTo(myMap)\n        }\n      })\n    });\n\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-clock-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n\n      const $panelContainer = elem.find('.panel-container');\n\n      if(this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n\n\nvar Geohash = {};\n\n/* (Geohash-specific) Base32 map */\nGeohash.base32 = '0123456789bcdefghjkmnpqrstuvwxyz';\n\nGeohash.decode = function(geohash) {\n\n  var bounds = Geohash.bounds(geohash); // <-- the hard work\n  // now just determine the centre of the cell...\n\n  var latMin = bounds.sw.lat,\n    lonMin = bounds.sw.lng;\n  var latMax = bounds.ne.lat,\n    lonMax = bounds.ne.lng;\n\n  // cell centre\n  var lat = (latMin + latMax) / 2;\n  var lon = (lonMin + lonMax) / 2;\n\n  // round to close to centre without excessive precision: ⌊2-log10(Δ°)⌋ decimal places\n  lat = lat.toFixed(Math.floor(2 - Math.log(latMax - latMin) / Math.LN10));\n  lon = lon.toFixed(Math.floor(2 - Math.log(lonMax - lonMin) / Math.LN10));\n\n  return {\n    lat: Number(lat),\n    lng: Number(lon)\n  };\n};\n\nGeohash.bounds = function(geohash) {\n  if(geohash.length === 0) throw new Error('Invalid geohash');\n\n  geohash = geohash.toLowerCase();\n\n  var evenBit = true;\n  var latMin = -90,\n    latMax = 90;\n  var lonMin = -180,\n    lonMax = 180;\n\n  for(var i = 0; i < geohash.length; i++) {\n    var chr = geohash.charAt(i);\n    var idx = Geohash.base32.indexOf(chr);\n    if(idx == -1) throw new Error('Invalid geohash');\n\n    for(var n = 4; n >= 0; n--) {\n      var bitN = idx >> n & 1;\n      if(evenBit) {\n        // longitude\n        var lonMid = (lonMin + lonMax) / 2;\n        if(bitN == 1) {\n          lonMin = lonMid;\n        } else {\n          lonMax = lonMid;\n        }\n      } else {\n        // latitude\n        var latMid = (latMin + latMax) / 2;\n        if(bitN == 1) {\n          latMin = latMid;\n        } else {\n          latMax = latMid;\n        }\n      }\n      evenBit = !evenBit;\n    }\n  }\n\n  var bounds = {\n    sw: {\n      lat: latMin,\n      lng: lonMin\n    },\n    ne: {\n      lat: latMax,\n      lng: lonMax\n    },\n  };\n\n  return bounds;\n};\n"]}