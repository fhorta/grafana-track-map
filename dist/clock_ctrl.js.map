{"version":3,"sources":["../src/clock_ctrl.js"],"names":["guid","s4","Math","floor","random","toString","substring","loadGradient","gradient","ret","values","c0","v","c1","c2","c","syncMaps","map_list","k","map_ctrl","hasOwnProperty","push","length","combos","i","j","m","A","B","sync","hex","s","parseInt","isNaN","round","min","max","charAt","convertToHex","rgb","trim","convertToRGB","color","generateColor","colorStart","colorEnd","colorCount","start","end","len","alpha","_","MetricsPanelCtrl","appEvents","heatOpts","radius","minOpacity","maxZoom","blur","panelDefaults","ClockCtrl","$scope","$injector","myMap","coords","highlightedMarker","timeSrv","get","panel","maxDataPoints","mapId","String","defaults","dashboard","events","on","onInitEditMode","bind","onPanelTeardown","render","data","minLat","maxLat","minLon","maxLon","polylines","polyline","lastLineHasData","undefined","rows","position","Geohash","decode","lat","lng","value","hash","timestamp","remove","center","find","point","L","map","fix","setView","LatLng","fitBounds","tiles","tileLayer","attribution","subdomains","addTo","p","heatLayer","addEditorTab","$timeout","cancel","nextTickPromise","scope","elem","templateUrl","base32","geohash","bounds","latMin","sw","lonMin","latMax","ne","lonMax","lon","toFixed","log","LN10","Number","Error","toLowerCase","evenBit","chr","idx","indexOf","n","bitN","lonMid","latMid"],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import './leaflet.js';\nimport _ from 'lodash';\n//import moment from 'moment';\nimport './css/clock-panel.css!';\nimport './leaflet.css!';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport appEvents from 'app/core/app_events';\n\nvar map_ctrl = {};\n\nfunction guid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\nfunction loadGradient(gradient){\n    var ret = {};\n    var values = [\n        gradient.c0.v,\n        gradient.c1.v,\n        gradient.c2.v,\n    ]\n    ret[values[0]] = gradient.c0.c;\n    ret[values[1]] = gradient.c1.c;\n    ret[values[2]] = gradient.c2.c;\n    return ret;\n}\n\nvar heatOpts = {\n    radius:20,\n    minOpacity: 0,\n    maxZoom: 18,\n    max: 600,\n    blur: 15,\n    gradient: {0.4: 'blue', 0.65: 'lime', 1: 'red'}\n}\n\nconst panelDefaults = {\n    'heatOpts': heatOpts,\n    'gradient': {\n        c0: { c: 'blue',    v: 0.4 },\n        c1: { c: 'red',     v: 0.64 },\n        c2: { c: 'lime',    v: 1 }\n    },\n};\n\n//import './realworld-10000.js';\nimport './leaflet-heat.js';\nimport './leaflet-sync.js';\n//import {h337} from './heatmap.js'\n//import {HeatmapOverlay} from './leaflet-heatmap.js';\n//\n\nfunction syncMaps(){\n    //console.log(map_ctrl);\n    var map_list = [];\n    for (var k in map_ctrl) {\n        if (map_ctrl.hasOwnProperty(k)) {\n            map_list.push(map_ctrl[k]);\n        }\n    }\n    //console.log(map_list);\n\n    if (map_list.length>1) {\n        var combos = [];\n        for (var i = 0; i < map_list.length; i++)\n            for (var j = i + 1; j < map_list.length; j++)\n                combos.push([map_list[i], map_list[j]]);\n\n        //console.log(\"Combos: \", combos.length);\n        for (var m in combos){\n            var A = combos[m][0];\n            var B = combos[m][1];\n            A.sync(B);\n            B.sync(A);\n        }\n    }\n\n}\n\n\nexport class ClockCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector) {\n\n        var myMap;\n        var coords = [];\n        var highlightedMarker = null;\n        var timeSrv;\n\n        super($scope, $injector);\n        timeSrv = $injector.get('timeSrv');\n        this.panel.maxDataPoints = 10000;\n\n        var mapId = String(guid())+\"_map\";\n\n        this.panel.mapId  = mapId;\n\n        _.defaults(this.panel, panelDefaults);\n        var heatOpts = this.panel.heatOpts;\n        heatOpts.gradient = loadGradient(this.panel.gradient);\n\n        const dashboard = this.dashboard;\n\n        //appEvents.on('graph-hover', event => {\n            //if (coords) {\n                //for (var i = 0; i < coords.length; i++) {\n                    //if (coords[i].timestamp >= event.pos.x) {\n                        //if (coords[i].circle) {\n                            //coords[i].circle.setStyle({\n                                //fillColor: 'red',\n                                //color: 'red'\n                            //});\n                        //}\n                        //if (highlightedMarker) {\n                            //highlightedMarker.setStyle({\n                                //fillColor: 'none',\n                                //color: 'none'\n                            //});\n                        //}\n                        //highlightedMarker = coords[i].circle;\n                        //break;\n                    //}\n                //}\n            //}\n        //});\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.events.on('panel-initialized', this.render.bind(this));\n        this.events.on('data-received', function (data) {\n            coords = [];\n            var minLat = 90;\n            var maxLat = -90;\n            var minLon = 180;\n            var maxLon = -180;\n            var polylines = [];\n            var polyline = [];\n            var lastLineHasData = false;\n\n            if (data[0]!=undefined){\n                for (var i = 0; i < data[0].rows.length; i++) {\n                    const position = data[0].rows[i][1] ?\n                        Geohash.decode(data[0].rows[i][1]) :\n                        null;\n                    if (position) {\n                        minLat = Math.min(minLat, position.lat);\n                        minLon = Math.min(minLon, position.lng);\n                        maxLat = Math.max(maxLat, position.lat);\n                        maxLon = Math.max(maxLon, position.lng);\n                        polyline.push(position);\n                        lastLineHasData = true;\n                    } else {\n                        if (lastLineHasData) {\n                            polylines.push(polyline);\n                            polyline = [];\n                            lastLineHasData = false;\n                        }\n                    }\n                    coords.push({\n                        value: data[0].rows[i][2],\n                        hash: data[0].rows[i][1],\n                        position: position,\n                        timestamp: data[0].rows[i][0]\n                    });\n                }\n            }\n\n            if (lastLineHasData) {\n                polylines.push(polyline);\n            }\n\n            if (myMap) {\n                myMap.remove();\n            }\n\n            var center = coords.find(point => point.position);\n            center = center ? center.position : [0, 0];\n\n            myMap = L.map(mapId);\n            var fix = 0.000000000001;\n\n            map_ctrl[mapId] = myMap;\n\n            if (data[0]!=undefined){\n                myMap.setView(new L.LatLng(40.730610, -73.935242), 18);\n            } else {\n                myMap.setView(new L.LatLng(center[0], center[1]), 18);\n            }\n\n            //console.log(\"data: \", data);\n            //console.log(\": \", coords.length);\n            //console.log(\"maps: \",Object.keys(map_ctrl).length, map_ctrl);\n\n            myMap.fitBounds([\n                [minLat + fix, minLon + fix],\n                [maxLat + fix, maxLon + fix]\n            ]);\n\n            //var tiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n                //attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n            //}).addTo(myMap);\n\n            var tiles = L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', {\n                attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n                subdomains: 'abcd',\n                maxZoom: 20\n            }).addTo(myMap);\n\n            //var scale = function(opts){\n                //var istart = opts.domain[0],\n                    //istop  = opts.domain[1],\n                    //ostart = opts.range[0],\n                    //ostop  = opts.range[1];\n                //return function scale(value) {\n                    //return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n                //}\n            //};\n\n            //var nscale=10;\n            //var mscale = scale({domain:[0,nscale],range:[0,1]});\n            //var mgradient = {};\n            //var inc = 0;\n            //var mcolors = generateColor('#111111','#6495ED',nscale);\n\n            //mcolors.map(function (c) {\n                //mgradient[mscale(inc)] = \"#\"+String(mcolors[inc]);\n                //inc+=1;\n            //})\n\n            data = coords.map(function (p) { return [p.position.lat, p.position.lng, p.value]; });\n\n            var heatLayer = L.heatLayer(data, heatOpts).addTo(myMap);\n\n            syncMaps();\n\n\n            //myMap.on('boxzoomend', function (e) {\n                //const coordsInBox = coords.filter(\n                    //coord =>\n                    //coord.position &&\n                    //e.boxZoomBounds.contains(\n                        //L.latLng(coord.position.lat, coord.position.lng)\n                    //)\n                //);\n                //const minTime = Math.min.apply(\n                    //Math,\n                    //coordsInBox.map(coord => coord.timestamp)\n                //);\n                //const maxTime = Math.max.apply(\n                    //Math,\n                    //coordsInBox.map(coord => coord.timestamp)\n                //);\n                //console.log(new Date(minTime));\n                //console.log(new Date(maxTime));\n                //if (isFinite(minTime) && isFinite(maxTime)) {\n                    //timeSrv.setTime({\n                        //from: moment.utc(minTime),\n                        //to: moment.utc(maxTime)\n                    //});\n                //}\n            //});\n        });\n    }\n\n    onInitEditMode() {\n        this.addEditorTab( 'Options', 'public/plugins/grafana-map-panel/editor.html', 2);\n    }\n\n    onPanelTeardown() {\n        this.$timeout.cancel(this.nextTickPromise);\n        //console.log(\"teardown: \", this);\n        map_ctrl[this.panel.mapId].remove();\n        delete map_ctrl[this.panel.mapId];\n        syncMaps();\n    }\n\n    link(scope, elem) {\n        this.events.on('render', () => {\n            //const $panelContainer = elem.find('.panel-container');\n            this.panel.heatOpts.gradient = loadGradient(this.panel.gradient);\n            //console.log(this.panel.heatOpts);\n            //console.log(\"link: \", Object.keys(scope.maps).length, scope.maps);\n            //if (scope.maps[this.panel.mapId] != undefined) {\n                //scope.maps[this.panel.mapId].setOptions(this.panel.heatOpts);\n                //scope.maps[this.panel.mapId].redraw();\n            //}\n        });\n    }\n}\n\nClockCtrl.templateUrl = 'module.html';\n\nvar Geohash = {};\n\n/* (Geohash-specific) Base32 map */\nGeohash.base32 = '0123456789bcdefghjkmnpqrstuvwxyz';\n\nGeohash.decode = function (geohash) {\n    var bounds = Geohash.bounds(geohash); // <-- the hard work\n    // now just determine the centre of the cell...\n\n    var latMin = bounds.sw.lat,\n        lonMin = bounds.sw.lng;\n    var latMax = bounds.ne.lat,\n        lonMax = bounds.ne.lng;\n\n    // cell centre\n    var lat = (latMin + latMax) / 2;\n    var lon = (lonMin + lonMax) / 2;\n\n    // round to close to centre without excessive precision: ⌊2-log10(Δ°)⌋ decimal places\n    lat = lat.toFixed(Math.floor(2 - Math.log(latMax - latMin) / Math.LN10));\n    lon = lon.toFixed(Math.floor(2 - Math.log(lonMax - lonMin) / Math.LN10));\n\n    return {\n        lat: Number(lat),\n        lng: Number(lon)\n    };\n};\n\nGeohash.bounds = function (geohash) {\n    if (geohash.length === 0) throw new Error('Invalid geohash');\n\n    geohash = geohash.toLowerCase();\n\n    var evenBit = true;\n    var latMin = -90,\n        latMax = 90;\n    var lonMin = -180,\n        lonMax = 180;\n\n    for (var i = 0; i < geohash.length; i++) {\n        var chr = geohash.charAt(i);\n        var idx = Geohash.base32.indexOf(chr);\n        if (idx == -1) throw new Error('Invalid geohash');\n        for (var n = 4; n >= 0; n--) {\n            var bitN = (idx >> n) & 1;\n            if (evenBit) {\n                // longitude\n                var lonMid = (lonMin + lonMax) / 2;\n                if (bitN == 1) {\n                    lonMin = lonMid;\n                } else {\n                    lonMax = lonMid;\n                }\n            } else {\n                // latitude\n                var latMid = (latMin + latMax) / 2;\n                if (bitN == 1) {\n                    latMin = latMid;\n                } else {\n                    latMax = latMid;\n                }\n            }\n            evenBit = !evenBit;\n        }\n    }\n\n    var bounds = {\n        sw: {\n            lat: latMin,\n            lng: lonMin\n        },\n        ne: {\n            lat: latMax,\n            lng: lonMax\n        }\n    };\n\n    return bounds;\n};\n\nfunction hex (c) {\n  var s = \"0123456789abcdef\";\n  var i = parseInt (c);\n  if (i == 0 || isNaN (c))\n    return \"00\";\n  i = Math.round (Math.min (Math.max (0, i), 255));\n  return s.charAt ((i - i % 16) / 16) + s.charAt (i % 16);\n}\n\n/* Convert an RGB triplet to a hex string */\nfunction convertToHex (rgb) {\n  return hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);\n}\n\n/* Remove '#' in color hex string */\nfunction trim (s) { return (s.charAt(0) == '#') ? s.substring(1, 7) : s }\n\n/* Convert a hex string to an RGB triplet */\nfunction convertToRGB (hex) {\n  var color = [];\n  color[0] = parseInt ((trim(hex)).substring (0, 2), 16);\n  color[1] = parseInt ((trim(hex)).substring (2, 4), 16);\n  color[2] = parseInt ((trim(hex)).substring (4, 6), 16);\n  return color;\n}\n\nfunction generateColor(colorStart,colorEnd,colorCount){\n    // The beginning of your gradient\n    var start = convertToRGB (colorStart);\n    // The end of your gradient\n    var end   = convertToRGB (colorEnd);\n    // The number of colors to compute\n    var len = colorCount;\n    //Alpha blending amount\n    var alpha = 0.0;\n    var ret = [];\n    for (var i = 0; i < len; i++) {\n        var c = [];\n        alpha += (1.0/len);\n        c[0] = start[0] * alpha + (1 - alpha) * end[0];\n        c[1] = start[1] * alpha + (1 - alpha) * end[1];\n        c[2] = start[2] * alpha + (1 - alpha) * end[2];\n        ret.push(convertToHex (c));\n    }\n    return ret;\n}\n"]}