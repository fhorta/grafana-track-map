{"version":3,"sources":["../src/leaflet-sync.js"],"names":["NO_ANIMATION","animate","reset","disableViewprereset","L","Sync","offsetHelper","ratioRef","ratioTarget","or","Util","isArray","ot","center","zoom","refMap","targetMap","rs","getSize","ts","pt","project","subtract","x","y","add","unproject","Map","include","sync","map","options","_initSync","extend","noInitialSync","syncCursor","syncCursorMarkerOptions","radius","fillOpacity","color","fillColor","offsetFn","_syncMaps","indexOf","push","_syncOffsetFns","stamp","setView","getCenter","getZoom","cursor","circleMarker","addTo","_cursors","on","_cursorSyncMove","_cursorSyncOut","_selfSetView","_syncOnMoveend","_syncOnDragend","unsync","self","forEach","indx","splice","setLatLng","synced","id","length","off","isSynced","otherMap","has","hasOwnProperty","Object","keys","e","latlng","_syncDragend","toSync","fire","originalMap","sandwich","obj","fn","viewpreresets","_events","viewprereset","ret","prototype","call","panBy","offset","_onResize","event","_stop","dragging","_draggable","_updatePosition","Draggable","DomUtil","setPosition","_element","_newPos","eachLayer","layer","_google","undefined","setCenter"],"mappings":"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","file":"leaflet-sync.js","sourcesContent":["/*\n * Extends L.Map to synchronize the interaction on one map to one or more other maps.\n */\n\n(function () {\n    var NO_ANIMATION = {\n        animate: false,\n        reset: true,\n        disableViewprereset: true\n    };\n\n    L.Sync = function () {};\n    /*\n     * Helper function to compute the offset easily.\n     *\n     * The arguments are relative positions with respect to reference and target maps of\n     * the point to sync. If you provide ratioRef=[0, 1], ratioTarget=[1, 0] will sync the\n     * bottom left corner of the reference map with the top right corner of the target map.\n     * The values can be less than 0 or greater than 1. It will sync points out of the map.\n     */\n    L.Sync.offsetHelper = function (ratioRef, ratioTarget) {\n        var or = L.Util.isArray(ratioRef) ? ratioRef : [0.5, 0.5];\n        var ot = L.Util.isArray(ratioTarget) ? ratioTarget : [0.5, 0.5];\n        return function (center, zoom, refMap, targetMap) {\n            var rs = refMap.getSize();\n            var ts = targetMap.getSize();\n            var pt = refMap.project(center, zoom)\n                           .subtract([(0.5 - or[0]) * rs.x, (0.5 - or[1]) * rs.y])\n                           .add([(0.5 - ot[0]) * ts.x, (0.5 - ot[1]) * ts.y]);\n            return refMap.unproject(pt, zoom);\n        };\n    };\n\n\n    L.Map.include({\n        sync: function (map, options) {\n            this._initSync();\n            options = L.extend({\n                noInitialSync: false,\n                syncCursor: false,\n                syncCursorMarkerOptions: {\n                    radius: 10,\n                    fillOpacity: 0.3,\n                    color: '#da291c',\n                    fillColor: '#fff'\n                },\n                offsetFn: function (center, zoom, refMap, targetMap) {\n                    // no transformation at all\n                    return center;\n                }\n            }, options);\n\n            // prevent double-syncing the map:\n            if (this._syncMaps.indexOf(map) === -1) {\n                this._syncMaps.push(map);\n                this._syncOffsetFns[L.Util.stamp(map)] = options.offsetFn;\n            }\n\n            if (!options.noInitialSync) {\n                map.setView(\n                    options.offsetFn(this.getCenter(), this.getZoom(), this, map),\n                    this.getZoom(), NO_ANIMATION);\n            }\n            if (options.syncCursor) {\n                if (typeof map.cursor === 'undefined') {\n                    map.cursor = L.circleMarker([0, 0], options.syncCursorMarkerOptions).addTo(map);\n                }\n\n                this._cursors.push(map.cursor);\n\n                this.on('mousemove', this._cursorSyncMove, this);\n                this.on('mouseout', this._cursorSyncOut, this);\n            }\n\n            // on these events, we should reset the view on every synced map\n            // dragstart is due to inertia\n            this.on('resize zoomend', this._selfSetView);\n            this.on('moveend', this._syncOnMoveend);\n            this.on('dragend', this._syncOnDragend);\n            return this;\n        },\n\n\n        // unsync maps from each other\n        unsync: function (map) {\n            var self = this;\n\n            if (this._cursors) {\n                this._cursors.forEach(function (cursor, indx, _cursors) {\n                    if (cursor === map.cursor) {\n                        _cursors.splice(indx, 1);\n                    }\n                });\n            }\n\n            // TODO: hide cursor in stead of moving to 0, 0\n            if (map.cursor) {\n                map.cursor.setLatLng([0, 0]);\n            }\n\n            if (this._syncMaps) {\n                this._syncMaps.forEach(function (synced, id) {\n                    if (map === synced) {\n                        delete self._syncOffsetFns[L.Util.stamp(map)];\n                        self._syncMaps.splice(id, 1);\n                    }\n                });\n            }\n\n            if (!this._syncMaps || this._syncMaps.length == 0) {\n                // no more synced maps, so these events are not needed.\n                this.off('resize zoomend', this._selfSetView);\n                this.off('moveend', this._syncOnMoveend);\n                this.off('dragend', this._syncOnDragend);\n            }\n\n            return this;\n        },\n\n        // Checks if the map is synced with anything or a specifyc map\n        isSynced: function (otherMap) {\n            var has = (this.hasOwnProperty('_syncMaps') && Object.keys(this._syncMaps).length > 0);\n            if (has && otherMap) {\n                // Look for this specific map\n                has = false;\n                this._syncMaps.forEach(function (synced) {\n                    if (otherMap == synced) { has = true; }\n                });\n            }\n            return has;\n        },\n\n\n        // Callbacks for events...\n        _cursorSyncMove: function (e) {\n            this._cursors.forEach(function (cursor) {\n                cursor.setLatLng(e.latlng);\n            });\n        },\n\n        _cursorSyncOut: function (e) {\n            this._cursors.forEach(function (cursor) {\n                // TODO: hide cursor in stead of moving to 0, 0\n                cursor.setLatLng([0, 0]);\n            });\n        },\n\n        _selfSetView: function (e) {\n            // reset the map, and let setView synchronize the others.\n            this.setView(this.getCenter(), this.getZoom(), NO_ANIMATION);\n        },\n\n        _syncOnMoveend: function (e) {\n            if (this._syncDragend) {\n                // This is 'the moveend' after the dragend.\n                // Without inertia, it will be right after,\n                // but when inertia is on, we need this to detect that.\n                this._syncDragend = false; // before calling setView!\n                this._selfSetView(e);\n                this._syncMaps.forEach(function (toSync) {\n                    toSync.fire('moveend');\n                });\n            }\n        },\n\n        _syncOnDragend: function (e) {\n            // It is ugly to have state, but we need it in case of inertia.\n            this._syncDragend = true;\n        },\n\n\n        // overload methods on originalMap to replay interactions on _syncMaps;\n        _initSync: function () {\n            if (this._syncMaps) {\n                return;\n            }\n            var originalMap = this;\n\n            this._syncMaps = [];\n            this._cursors = [];\n            this._syncOffsetFns = {};\n\n            L.extend(originalMap, {\n                setView: function (center, zoom, options, sync) {\n                    // Use this sandwich to disable and enable viewprereset\n                    // around setView call\n                    function sandwich (obj, fn) {\n                        var viewpreresets = [];\n                        if (options && options.disableViewprereset) {\n                            // The event viewpreresets does an invalidateAll,\n                            // that reloads all the tiles.\n                            // That causes an annoying flicker.\n                            viewpreresets = obj._events.viewprereset;\n                            obj._events.viewprereset = [];\n                        }\n                        var ret = fn(obj);\n                        if (options && options.disableViewprereset) {\n                            // restore viewpreresets event to its previous values\n                            obj._events.viewprereset = viewpreresets;\n                        }\n                        return ret;\n                    }\n\n                    // Looks better if the other maps 'follow' the active one,\n                    // so call this before _syncMaps\n                    var ret = sandwich(this, function (obj) {\n                        return L.Map.prototype.setView.call(obj, center, zoom, options);\n                    });\n\n                    if (!sync) {\n                        originalMap._syncMaps.forEach(function (toSync) {\n                            sandwich(toSync, function (obj) {\n                                return toSync.setView(\n                                    originalMap._syncOffsetFns[L.Util.stamp(toSync)](center, zoom, originalMap, toSync),\n                                    zoom, options, true);\n                            });\n                        });\n                    }\n\n                    return ret;\n                },\n\n                panBy: function (offset, options, sync) {\n                    if (!sync) {\n                        originalMap._syncMaps.forEach(function (toSync) {\n                            toSync.panBy(offset, options, true);\n                        });\n                    }\n                    return L.Map.prototype.panBy.call(this, offset, options);\n                },\n\n                _onResize: function (event, sync) {\n                    if (!sync) {\n                        originalMap._syncMaps.forEach(function (toSync) {\n                            toSync._onResize(event, true);\n                        });\n                    }\n                    return L.Map.prototype._onResize.call(this, event);\n                },\n\n                _stop: function (sync) {\n                    L.Map.prototype._stop.call(this);\n                    if (!sync) {\n                        originalMap._syncMaps.forEach(function (toSync) {\n                            toSync._stop(true);\n                        });\n                    }\n                }\n            });\n\n            originalMap.dragging._draggable._updatePosition = function () {\n                L.Draggable.prototype._updatePosition.call(this);\n                var self = this;\n                originalMap._syncMaps.forEach(function (toSync) {\n                    L.DomUtil.setPosition(toSync.dragging._draggable._element, self._newPos);\n                    toSync.eachLayer(function (layer) {\n                        if (layer._google !== undefined) {\n                            var offsetFn = originalMap._syncOffsetFns[L.Util.stamp(toSync)];\n                            var center = offsetFn(originalMap.getCenter(), originalMap.getZoom(), originalMap, toSync);\n                            layer._google.setCenter(center);\n                        }\n                    });\n                    toSync.fire('move');\n                });\n            };\n        }\n    });\n})();\n"]}